import fs from 'fs';import path from 'path';const problemsDir = path.join(process.cwd(), 'problems');const dataDir = path.join(process.cwd(), 'src', 'data');function parseMarkdown(content) {  const problemMatch = content.match(/## Problem\n\n([\s\S]*?)\n\n## Solution/);  const solutionMatch = content.match(/## Solution\n\n```python\n([\s\S]*?)\n```/);  if (!problemMatch || !solutionMatch) {    return null;  }  return {    description: problemMatch[1].trim(),    solution: solutionMatch[1].trim(),  };}function main() {  const files = fs.readdirSync(problemsDir).filter(file => file.endsWith('.md'));  const problems = [];  for (const file of files) {    const filePath = path.join(problemsDir, file);    const content = fs.readFileSync(filePath, 'utf-8');    const problemNumber = parseInt(path.basename(file, '.md'), 10);    const parsed = parseMarkdown(content);    if (parsed) {      problems.push({        number: problemNumber,        title: `Problem ${problemNumber}`,        ...parsed,      });    }  }  if (!fs.existsSync(dataDir)) {    fs.mkdirSync(dataDir);  }  fs.writeFileSync(    path.join(dataDir, 'problems.json'),    JSON.stringify(problems, null, 2)  );  console.log('Successfully parsed problems!');}main();